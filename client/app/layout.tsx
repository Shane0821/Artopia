import type { Metadata } from 'next'
import '@styles/globals.css'
import React, { Children } from 'react'
import Nav from '@components/Nav'
import Provider from '@components/Provider'
import Footer from '@components/Footer'

export const metadata: Metadata = {
  title: 'Artopia',
  description: 'Discover & Share AI Arts and Prompts'
}

// {children, } is a JavaScript destructuring assignment that extracts the children prop from the props object passed to a React component.
// {children: React.ReactNode} is a TypeScript type annotation that specifies the type of the children prop.
function RootLayout ({children, } : {children: React.ReactNode}) {
  return (
    <html lang='en'>
      <body>
        <Provider>
          <div className='main'>
            <div className='gradient'/>
          </div>

          <main className='app'>
            <Nav></Nav>
              {children} 
          </main>  

          <Footer></Footer>
        </Provider>
      </body>
    </html>
  )
}

export default RootLayout


// import './globals.css'
// import type { Metadata } from 'next'
// import { Inter } from 'next/font/google'

// const inter = Inter({ subsets: ['latin'] })

// export const metadata: Metadata = {
//   title: 'Create Next App',
//   description: 'Generated by create next app',
// }

// export default function RootLayout({
//   children,
// }: {
//   children: React.ReactNode
// }) {
//   return (
//     <html lang="en">
//       <body className={inter.className}>{children}</body>
//     </html>
//   )
// }
